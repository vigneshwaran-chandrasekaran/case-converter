{"version":3,"sources":["pages/NotFound.js","pages/CaseConverter.js","pages/UrlQueryStringParser.js","router.js","serviceWorker.js","index.js"],"names":["NotFound","status","title","subTitle","extra","type","TextArea","Input","Text","Typography","CaseConverter","useState","value","setValue","className","justify","span","rows","onChange","event","target","spellCheck","strong","upperCase","lowerCase","camelCase","kebabCase","snakeCase","UrlQueryStringParser","result","setResult","getJsonFromUrl2","url","question","indexOf","hash","length","query","substring","split","forEach","part","eq","join","key","substr","val","decodeURIComponent","from","to","index","push","console","log","useEffect","border","Object","keys","map","Sider","Layout","Content","Router","style","minHeight","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","theme","mode","defaultSelectedKeys","Item","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d5e2c466.chunk.js","sourcesContent":["import React from 'react';\nimport { Result, Button } from 'antd';\n\nexport function NotFound() {\n\treturn (\n\t\t<Result\n\t\t\tstatus=\"404\"\n\t\t\ttitle=\"404\"\n\t\t\tsubTitle=\"Sorry, the page you visited does not exist.\"\n\t\t\textra={<Button type=\"primary\">Back Home</Button>}\n\t\t/>\n\t);\n}\n","import React, { useState } from 'react';\nimport { Input, Row, Col, Typography } from 'antd';\nimport { lowerCase, camelCase, kebabCase, upperCase, snakeCase } from 'lodash';\n\nconst { TextArea } = Input;\nconst { Text } = Typography;\n\nexport function CaseConverter() {\n\tconst [value, setValue] = useState('sample text');\n\n\tfunction handleChange(event) {\n\t\tsetValue(event.target.value);\n\t}\n\n\treturn (\n\t\t<div className=\"mt-30\">\n\t\t\t<Row type=\"flex\" justify=\"center\">\n\t\t\t\t<Col span={20}>\n\t\t\t\t\t<h3>Case Converter</h3>\n\t\t\t\t\t<TextArea\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tspellCheck={true}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row type=\"flex\" justify=\"center\" className=\"mt-30\">\n\t\t\t\t<Col span={20}>\n\t\t\t\t\t<Text strong>UPPERCASE</Text>\n\t\t\t\t\t<p>{upperCase(value)}</p>\n\t\t\t\t\t<Text strong>lowercase</Text>\n\t\t\t\t\t<p>{lowerCase(value)}</p>\n\t\t\t\t\t<Text strong>camelCase</Text>\n\t\t\t\t\t<p>{camelCase(value)}</p>\n\t\t\t\t\t<Text strong>kebab-case</Text>\n\t\t\t\t\t<p>{kebabCase(value)}</p>\n\t\t\t\t\t<Text strong>snake_case(underscores)</Text>\n\t\t\t\t\t<p>{snakeCase(value)}</p>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</div>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport { Input, Row, Col, Typography } from 'antd';\n\nconst { TextArea } = Input;\nconst { Text } = Typography;\n\nconst SEARCH =\n\t'https://www.google.com/search?q=india&oq=india&aqs=chrome..69i57j69i60j69i61j5j69i60l3j69i65.4326j0j7&sourceid=chrome&ie=UTF-8';\n\nexport function UrlQueryStringParser() {\n\tconst [value, setValue] = useState(SEARCH);\n\tconst [result, setResult] = useState({});\n\n\tuseEffect(() => {\n\t\tgetJsonFromUrl2(value);\n\t}, []);\n\n\tfunction handleChange(event) {\n\t\tsetValue(event.target.value);\n\t\tgetJsonFromUrl2(event.target.value);\n\t}\n\n\tfunction getJsonFromUrl2(url) {\n\t\tvar question = url.indexOf('?');\n\t\tvar hash = url.indexOf('#');\n\t\tif (hash == -1 && question == -1) return {};\n\t\tif (hash == -1) hash = url.length;\n\t\tvar query =\n\t\t\tquestion == -1 || hash == question + 1\n\t\t\t\t? url.substring(hash)\n\t\t\t\t: url.substring(question + 1, hash);\n\t\tvar result = {};\n\t\tquery.split('&').forEach(function(part) {\n\t\t\tif (!part) return;\n\t\t\tpart = part.split('+').join(' '); // replace every + with space, regexp-free version\n\t\t\tvar eq = part.indexOf('=');\n\t\t\tvar key = eq > -1 ? part.substr(0, eq) : part;\n\t\t\tvar val = eq > -1 ? decodeURIComponent(part.substr(eq + 1)) : '';\n\t\t\tvar from = key.indexOf('[');\n\t\t\tif (from == -1) result[decodeURIComponent(key)] = val;\n\t\t\telse {\n\t\t\t\tvar to = key.indexOf(']', from);\n\t\t\t\tvar index = decodeURIComponent(key.substring(from + 1, to));\n\t\t\t\tkey = decodeURIComponent(key.substring(0, from));\n\t\t\t\tif (!result[key]) result[key] = [];\n\t\t\t\tif (!index) result[key].push(val);\n\t\t\t\telse result[key][index] = val;\n\t\t\t}\n\t\t});\n\t\tsetResult(result);\n\t\tconsole.log('result 2', result);\n\t\t// return result;\n\t}\n\n\treturn (\n\t\t<div className=\"mt-30\">\n\t\t\t<Row type=\"flex\" justify=\"center\">\n\t\t\t\t<Col span={20}>\n\t\t\t\t\t<h3>URL Parser</h3>\n\t\t\t\t\t<TextArea\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tspellCheck={true}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row type=\"flex\" justify=\"center\" className=\"mt-30\">\n\t\t\t\t<Col span={20}>\n\t\t\t\t\t<Text strong>Result</Text>\n\t\t\t\t\t<table border=\"1\">\n\t\t\t\t\t\t{Object.keys(result).map((key, index) => (\n\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t<td className=\"pr-20\">\n\t\t\t\t\t\t\t\t\t<strong>{key}</strong>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{result[key]}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</table>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\n\nimport * as Pages from './pages';\n\nconst { Sider, Content } = Layout;\n\nexport default function Router() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t\t<Sider\n\t\t\t\t\tbreakpoint=\"lg\"\n\t\t\t\t\tcollapsedWidth=\"0\"\n\t\t\t\t\tonBreakpoint={broken => {\n\t\t\t\t\t\tconsole.log(broken);\n\t\t\t\t\t}}\n\t\t\t\t\tonCollapse={(collapsed, type) => {\n\t\t\t\t\t\tconsole.log(collapsed, type);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"logo\" />\n\t\t\t\t\t<Menu\n\t\t\t\t\t\ttheme=\"light\"\n\t\t\t\t\t\tmode=\"inline\"\n\t\t\t\t\t\tdefaultSelectedKeys={['2']}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Menu.Item key=\"1\">\n\t\t\t\t\t\t\t<Link to=\"/case-converter\">Case converter</Link>\n\t\t\t\t\t\t\t<span className=\"nav-text\">Case converter</span>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t<Menu.Item key=\"2\">\n\t\t\t\t\t\t\t<Link to=\"/url-query-string-parser\">\n\t\t\t\t\t\t\t\tURL Parser\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<span className=\"nav-text\">URL Parser</span>\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</Menu>\n\t\t\t\t</Sider>\n\t\t\t\t<Layout>\n\t\t\t\t\t<Content>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/case-converter\">\n\t\t\t\t\t\t\t\t<Pages.CaseConverter />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path=\"/url-query-string-parser\">\n\t\t\t\t\t\t\t\t<Pages.UrlQueryStringParser />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t\t\t\t<Pages.NotFound />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Content>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t</BrowserRouter>\n\t);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Router from './router';\nimport './styles/style.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}